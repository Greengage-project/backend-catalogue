version: "3.3"
volumes:
  redis-data:
  redisinsight:

services:
  #redis:
  #  container_name: cache
  #  image: "redis:alpine"
  #  networks:
  #    - default  
  #  environment:
  #    - REDIS_PASSWORD=${CACHE_PASSWORD}
  #    - REDIS_REPLICATION_MODE=master
  #  ports:
  #    - "6379:6379"
  #  volumes:
  #    # save redisearch data to your current working directory
  #    - redis-data:/data
  #  command:
  #    # Save if 100 keys are added in every 10 seconds
  #    - "--save 10 100"
  #    # Set password
  #    - "--requirepass ${CACHE_PASSWORD}"  
  #
  #redisinsight: # redis db visualization dashboard
  #  container_name: cache-mon
  #  image: redislabs/redisinsight
  #  ports:
  #    - 8001:8001
  #  volumes:
  #    - redisinsight:/db
  #  networks:
  #    - default

  catalogue:
    image: 'catalogueprod:${TAG-latest}'
    container_name: app-prod
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      - PORT=${PORT}
      # behind proxy
      - BASE_PATH=/catalogue
    build:
      context: .
      dockerfile: Dockerfile.catalogue
      target: prod
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.${STACK_NAME?Variable not set}-catalogue-http.rule=PathPrefix(`/catalogue`)
        - traefik.http.services.${STACK_NAME?Variable not set}-catalogue.loadbalancer.server.port=${PORT}
        - traefik.http.routers.${STACK_NAME?Variable not set}-catalogue-http.middlewares=catalogue-stripprefix
        - traefik.http.middlewares.catalogue-stripprefix.stripprefix.prefixes=/catalogue
    networks:
      - traefik-public
      - default

networks:
  traefik-public:
    external: true