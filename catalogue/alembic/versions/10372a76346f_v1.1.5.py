"""v1.1.5

Revision ID: 10372a76346f
Revises: 6a215f234d09
Create Date: 2022-05-17 11:25:02.827170

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '10372a76346f'
down_revision = '6a215f234d09'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('questioncomment')
    op.drop_constraint('artefact_problem_problemprofile_id_fkey', 'artefact_problem', type_='foreignkey')
    op.drop_constraint('artefact_problem_artefact_id_fkey', 'artefact_problem', type_='foreignkey')
    op.create_foreign_key(None, 'artefact_problem', 'artefact', ['artefact_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'artefact_problem', 'problemprofile', ['problemprofile_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('coproductionschema_id_fkey', 'coproductionschema', type_='foreignkey')
    op.create_foreign_key(None, 'coproductionschema', 'artefact', ['id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('externalknowledgeinterlinker_id_fkey', 'externalknowledgeinterlinker', type_='foreignkey')
    op.create_foreign_key(None, 'externalknowledgeinterlinker', 'interlinker', ['id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('externalsoftwareinterlinker_id_fkey', 'externalsoftwareinterlinker', type_='foreignkey')
    op.create_foreign_key(None, 'externalsoftwareinterlinker', 'interlinker', ['id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('interlinker_id_fkey', 'interlinker', type_='foreignkey')
    op.create_foreign_key(None, 'interlinker', 'artefact', ['id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('knowledgeinterlinker_id_fkey', 'knowledgeinterlinker', type_='foreignkey')
    op.create_foreign_key(None, 'knowledgeinterlinker', 'interlinker', ['id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('objective_metadata_prerequisites_objectivemetadata_a_id_fkey', 'objective_metadata_prerequisites', type_='foreignkey')
    op.create_foreign_key(None, 'objective_metadata_prerequisites', 'objectivemetadata', ['objectivemetadata_a_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('phases_metadata_prerequisites_phasemetadata_a_id_fkey', 'phases_metadata_prerequisites', type_='foreignkey')
    op.create_foreign_key(None, 'phases_metadata_prerequisites', 'phasemetadata', ['phasemetadata_a_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('rating_artefact_id_fkey', 'rating', type_='foreignkey')
    op.create_foreign_key(None, 'rating', 'artefact', ['artefact_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('softwareinterlinker_id_fkey', 'softwareinterlinker', type_='foreignkey')
    op.create_foreign_key(None, 'softwareinterlinker', 'interlinker', ['id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('tasks_metadata_prerequisites_taskmetadata_a_id_fkey', 'tasks_metadata_prerequisites', type_='foreignkey')
    op.create_foreign_key(None, 'tasks_metadata_prerequisites', 'taskmetadata', ['taskmetadata_a_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('tasks_problemprofiles_association_taskmetadata_a_id_fkey', 'tasks_problemprofiles_association', type_='foreignkey')
    op.create_foreign_key(None, 'tasks_problemprofiles_association', 'taskmetadata', ['taskmetadata_a_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tasks_problemprofiles_association', type_='foreignkey')
    op.create_foreign_key('tasks_problemprofiles_association_taskmetadata_a_id_fkey', 'tasks_problemprofiles_association', 'taskmetadata', ['taskmetadata_a_id'], ['id'])
    op.drop_constraint(None, 'tasks_metadata_prerequisites', type_='foreignkey')
    op.create_foreign_key('tasks_metadata_prerequisites_taskmetadata_a_id_fkey', 'tasks_metadata_prerequisites', 'taskmetadata', ['taskmetadata_a_id'], ['id'])
    op.drop_constraint(None, 'softwareinterlinker', type_='foreignkey')
    op.create_foreign_key('softwareinterlinker_id_fkey', 'softwareinterlinker', 'interlinker', ['id'], ['id'])
    op.drop_constraint(None, 'rating', type_='foreignkey')
    op.create_foreign_key('rating_artefact_id_fkey', 'rating', 'artefact', ['artefact_id'], ['id'])
    op.drop_constraint(None, 'phases_metadata_prerequisites', type_='foreignkey')
    op.create_foreign_key('phases_metadata_prerequisites_phasemetadata_a_id_fkey', 'phases_metadata_prerequisites', 'phasemetadata', ['phasemetadata_a_id'], ['id'])
    op.drop_constraint(None, 'objective_metadata_prerequisites', type_='foreignkey')
    op.create_foreign_key('objective_metadata_prerequisites_objectivemetadata_a_id_fkey', 'objective_metadata_prerequisites', 'objectivemetadata', ['objectivemetadata_a_id'], ['id'])
    op.drop_constraint(None, 'knowledgeinterlinker', type_='foreignkey')
    op.create_foreign_key('knowledgeinterlinker_id_fkey', 'knowledgeinterlinker', 'interlinker', ['id'], ['id'])
    op.drop_constraint(None, 'interlinker', type_='foreignkey')
    op.create_foreign_key('interlinker_id_fkey', 'interlinker', 'artefact', ['id'], ['id'])
    op.drop_constraint(None, 'externalsoftwareinterlinker', type_='foreignkey')
    op.create_foreign_key('externalsoftwareinterlinker_id_fkey', 'externalsoftwareinterlinker', 'interlinker', ['id'], ['id'])
    op.drop_constraint(None, 'externalknowledgeinterlinker', type_='foreignkey')
    op.create_foreign_key('externalknowledgeinterlinker_id_fkey', 'externalknowledgeinterlinker', 'interlinker', ['id'], ['id'])
    op.drop_constraint(None, 'coproductionschema', type_='foreignkey')
    op.create_foreign_key('coproductionschema_id_fkey', 'coproductionschema', 'artefact', ['id'], ['id'])
    op.drop_constraint(None, 'artefact_problem', type_='foreignkey')
    op.drop_constraint(None, 'artefact_problem', type_='foreignkey')
    op.create_foreign_key('artefact_problem_artefact_id_fkey', 'artefact_problem', 'artefact', ['artefact_id'], ['id'])
    op.create_foreign_key('artefact_problem_problemprofile_id_fkey', 'artefact_problem', 'problemprofile', ['problemprofile_id'], ['id'])
    op.create_table('questioncomment',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('artefact_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('parent_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['artefact_id'], ['artefact.id'], name='questioncomment_artefact_id_fkey'),
    sa.ForeignKeyConstraint(['parent_id'], ['questioncomment.id'], name='questioncomment_parent_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='questioncomment_pkey')
    )
    # ### end Alembic commands ###
